// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Mux16(a=loop, b=in, sel=load, out=val);
    DMux8Way(in=true, sel=address[12..14], a=a, b=b, c=c, d=d, e=e, f=f);
    Or8Way(in[0]=a, in[1]=b, in[2]=c, in[3]=d, out=l0);
    Or(a=e, b=f, out=l1);

    RAM16K(in=val, load=l0, address=address[0..13], out=r0);
    Screen(in=val, load=l1, address=address[0..12], out=r1);
    Keyboard(out=r2);

    Mux8Way16(a=r0, b=r0, c=r0, d=r0, e=r1, f=r1, g=r2, sel=address[12..14], out=out, out=loop);
}
