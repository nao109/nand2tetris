<tokens>
<keyword> class </keyword>
<identifier> Random </identifier>
<symbol> { </symbol>
<keyword> static </keyword>
<keyword> int </keyword>
<identifier> xs </identifier>
<symbol> ; </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> srand </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> x0 </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> xs </identifier>
<symbol> = </symbol>
<identifier> x0 </identifier>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> rand </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> xs </identifier>
<symbol> = </symbol>
<identifier> Random </identifier>
<symbol> . </symbol>
<identifier> xor </identifier>
<symbol> ( </symbol>
<identifier> xs </identifier>
<symbol> , </symbol>
<identifier> xs </identifier>
<symbol> * </symbol>
<integerConstant> 128 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> xs </identifier>
<symbol> = </symbol>
<identifier> Random </identifier>
<symbol> . </symbol>
<identifier> xor </identifier>
<symbol> ( </symbol>
<identifier> xs </identifier>
<symbol> , </symbol>
<identifier> xs </identifier>
<symbol> / </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> xs </identifier>
<symbol> = </symbol>
<identifier> Random </identifier>
<symbol> . </symbol>
<identifier> xor </identifier>
<symbol> ( </symbol>
<identifier> xs </identifier>
<symbol> , </symbol>
<identifier> xs </identifier>
<symbol> * </symbol>
<integerConstant> 256 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<identifier> xs </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> xor </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> a </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> b </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> ret </identifier>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier> a </identifier>
<symbol> &amp; </symbol>
<symbol> ( </symbol>
<symbol> ~ </symbol>
<identifier> b </identifier>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> | </symbol>
<symbol> ( </symbol>
<symbol> ( </symbol>
<symbol> ~ </symbol>
<identifier> a </identifier>
<symbol> ) </symbol>
<symbol> &amp; </symbol>
<identifier> b </identifier>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>
